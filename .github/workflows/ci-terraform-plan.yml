name: 'ci-terraform-plan'

on:
  push:
    branches:
      - '*'

jobs:
  terraform-destroy-aws-from-main:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TF_PLUGIN_CACHE_DIR: /home/runner/work/_temp/_github_home/.terraform.d/plugin-cache
    steps:
    - name: 'Checkout main'
      uses: actions/checkout@v3
      with:
        ref: 'main'
        fetch-depth: '1'
    - name: 'Set up Terraform cache dir'
      run: |
        mkdir -p /home/runner/work/_temp/_github_home/.terraform.d/plugin-cache
    - name: 'Echo TF_PLUGIN_CACHE_DIR'
      run: |
        echo $TF_PLUGIN_CACHE_DIR
    - name: 'Cache Terraform'
      uses: actions/cache@v3
      with:
        path: |
          /home/runner/work/_temp/_github_home/.terraform.d/plugin-cache
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
    - name: 'Run terraform plan'
      timeout-minutes: 20
      env:
        TFSTATE_BUCKET: ${{ secrets.StateBucket }}
        TFSTATE_KEY: ${{ secrets.StateKey }}
        TFSTATE_REGION: ${{ vars.Region }}
        TF_VAR_owner: ${{ secrets.Owner }}
        TF_VAR_db_name: ${{ secrets.DatabaseName }}
        TF_VAR_db_user: ${{ secrets.DatabaseUser }}
        TF_VAR_db_password: ${{ secrets.DatabasePassword }}
        TF_VAR_public_key: ${{ secrets.PublicKey }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AwsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AwsSecretAccessKey }}
        AWS_DEFAULT_REGION: ${{ vars.Region }}
        AWS_DEFAULT_OUTPUT: 'json'
      run: |
        ./ci-terraform-plan.sh